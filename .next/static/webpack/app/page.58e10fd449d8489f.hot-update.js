"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./app/organisms/ChatList.tsx":
/*!************************************!*\
  !*** ./app/organisms/ChatList.tsx ***!
  \************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ChatList)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var _tanstack_react_query__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @tanstack/react-query */ \"(app-pages-browser)/./node_modules/@tanstack/react-query/build/modern/useQuery.js\");\n\nvar _s = $RefreshSig$();\n\n// Функция для получения чатов\nconst getChats = async ()=>{\n    const response = await fetch(\"http://localhost:8888/chat/all\");\n    if (!response.ok) {\n        throw new Error(\"Ошибка при получении чатов\");\n    }\n    return response.json();\n};\nfunction ChatList(param) {\n    let { onChatClick } = param;\n    _s();\n    // Используем useQuery для получения чатов\n    const { data, error, isLoading } = (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_1__.useQuery)({\n        queryKey: [\n            \"chat\"\n        ],\n        queryFn: getChats\n    });\n    if (isLoading) return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n        children: \"Загрузка...\"\n    }, void 0, false, {\n        fileName: \"/Users/vladburtsev/Projects/Study/ProjectExample/frontend/app/organisms/ChatList.tsx\",\n        lineNumber: 23,\n        columnNumber: 25\n    }, this);\n    if (error instanceof Error) return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n        children: [\n            \"Ошибка: \",\n            error.message\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/vladburtsev/Projects/Study/ProjectExample/frontend/app/organisms/ChatList.tsx\",\n        lineNumber: 24,\n        columnNumber: 38\n    }, this);\n    // Предполагаем, что данные чатов будут в data.chats\n    const chats = data || [];\n    console.log(chats);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"ul\", {\n        children: chats.map((chat)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                style: {\n                    cursor: \"pointer\"\n                },\n                onClick: ()=>onChatClick(chat.id),\n                children: [\n                    \"Чат \",\n                    chat.id\n                ]\n            }, chat.id, true, {\n                fileName: \"/Users/vladburtsev/Projects/Study/ProjectExample/frontend/app/organisms/ChatList.tsx\",\n                lineNumber: 33,\n                columnNumber: 9\n            }, this))\n    }, void 0, false, {\n        fileName: \"/Users/vladburtsev/Projects/Study/ProjectExample/frontend/app/organisms/ChatList.tsx\",\n        lineNumber: 31,\n        columnNumber: 5\n    }, this);\n}\n_s(ChatList, \"vamb9feK/asxjJLX6wcKCD8DQJA=\", false, function() {\n    return [\n        _tanstack_react_query__WEBPACK_IMPORTED_MODULE_1__.useQuery\n    ];\n});\n_c = ChatList;\nvar _c;\n$RefreshReg$(_c, \"ChatList\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2FwcC9vcmdhbmlzbXMvQ2hhdExpc3QudHN4IiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQWlFO0FBRWpFLDhCQUE4QjtBQUM5QixNQUFNQyxXQUFXO0lBQ2YsTUFBTUMsV0FBVyxNQUFNQyxNQUFNO0lBQzdCLElBQUksQ0FBQ0QsU0FBU0UsRUFBRSxFQUFFO1FBQ2hCLE1BQU0sSUFBSUMsTUFBTTtJQUNsQjtJQUNBLE9BQU9ILFNBQVNJLElBQUk7QUFDdEI7QUFFZSxTQUFTQyxTQUFTLEtBSWhDO1FBSmdDLEVBQy9CQyxXQUFXLEVBR1osR0FKZ0M7O0lBSy9CLDBDQUEwQztJQUMxQyxNQUFNLEVBQUVDLElBQUksRUFBRUMsS0FBSyxFQUFFQyxTQUFTLEVBQUUsR0FBR1gsK0RBQVFBLENBQUM7UUFDMUNZLFVBQVU7WUFBQztTQUFPO1FBQ2xCQyxTQUFTWjtJQUNYO0lBRUEsSUFBSVUsV0FBVyxxQkFBTyw4REFBQ0c7a0JBQUU7Ozs7OztJQUN6QixJQUFJSixpQkFBaUJMLE9BQU8scUJBQU8sOERBQUNTOztZQUFFO1lBQVNKLE1BQU1LLE9BQU87Ozs7Ozs7SUFFNUQsb0RBQW9EO0lBQ3BELE1BQU1DLFFBQVFQLFFBQVEsRUFBRTtJQUV4QlEsUUFBUUMsR0FBRyxDQUFDRjtJQUNaLHFCQUNFLDhEQUFDRztrQkFDRUgsTUFBTUksR0FBRyxDQUFDLENBQUNDLHFCQUNWLDhEQUFDQztnQkFFQ0MsT0FBTztvQkFBRUMsUUFBUTtnQkFBVTtnQkFDM0JDLFNBQVMsSUFBTWpCLFlBQVlhLEtBQUtLLEVBQUU7O29CQUNuQztvQkFDTUwsS0FBS0ssRUFBRTs7ZUFKUEwsS0FBS0ssRUFBRTs7Ozs7Ozs7OztBQVN0QjtHQS9Cd0JuQjs7UUFNYVAsMkRBQVFBOzs7S0FOckJPIiwic291cmNlcyI6WyIvVXNlcnMvdmxhZGJ1cnRzZXYvUHJvamVjdHMvU3R1ZHkvUHJvamVjdEV4YW1wbGUvZnJvbnRlbmQvYXBwL29yZ2FuaXNtcy9DaGF0TGlzdC50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdXNlUXVlcnksIHVzZVF1ZXJ5Q2xpZW50IH0gZnJvbSBcIkB0YW5zdGFjay9yZWFjdC1xdWVyeVwiO1xuXG4vLyDQpNGD0L3QutGG0LjRjyDQtNC70Y8g0L/QvtC70YPRh9C10L3QuNGPINGH0LDRgtC+0LJcbmNvbnN0IGdldENoYXRzID0gYXN5bmMgKCkgPT4ge1xuICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKFwiaHR0cDovL2xvY2FsaG9zdDo4ODg4L2NoYXQvYWxsXCIpO1xuICBpZiAoIXJlc3BvbnNlLm9rKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwi0J7RiNC40LHQutCwINC/0YDQuCDQv9C+0LvRg9GH0LXQvdC40Lgg0YfQsNGC0L7QslwiKTtcbiAgfVxuICByZXR1cm4gcmVzcG9uc2UuanNvbigpO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gQ2hhdExpc3Qoe1xuICBvbkNoYXRDbGljayxcbn06IHtcbiAgb25DaGF0Q2xpY2s6IChpZDogc3RyaW5nKSA9PiB2b2lkO1xufSkge1xuICAvLyDQmNGB0L/QvtC70YzQt9GD0LXQvCB1c2VRdWVyeSDQtNC70Y8g0L/QvtC70YPRh9C10L3QuNGPINGH0LDRgtC+0LJcbiAgY29uc3QgeyBkYXRhLCBlcnJvciwgaXNMb2FkaW5nIH0gPSB1c2VRdWVyeSh7XG4gICAgcXVlcnlLZXk6IFtcImNoYXRcIl0sXG4gICAgcXVlcnlGbjogZ2V0Q2hhdHMsXG4gIH0pO1xuXG4gIGlmIChpc0xvYWRpbmcpIHJldHVybiA8cD7Ql9Cw0LPRgNGD0LfQutCwLi4uPC9wPjtcbiAgaWYgKGVycm9yIGluc3RhbmNlb2YgRXJyb3IpIHJldHVybiA8cD7QntGI0LjQsdC60LA6IHtlcnJvci5tZXNzYWdlfTwvcD47XG5cbiAgLy8g0J/RgNC10LTQv9C+0LvQsNCz0LDQtdC8LCDRh9GC0L4g0LTQsNC90L3Ri9C1INGH0LDRgtC+0LIg0LHRg9C00YPRgiDQsiBkYXRhLmNoYXRzXG4gIGNvbnN0IGNoYXRzID0gZGF0YSB8fCBbXTtcblxuICBjb25zb2xlLmxvZyhjaGF0cyk7XG4gIHJldHVybiAoXG4gICAgPHVsPlxuICAgICAge2NoYXRzLm1hcCgoY2hhdDogeyBpZDogc3RyaW5nOyBuYW1lOiBzdHJpbmcgfSkgPT4gKFxuICAgICAgICA8bGlcbiAgICAgICAgICBrZXk9e2NoYXQuaWR9XG4gICAgICAgICAgc3R5bGU9e3sgY3Vyc29yOiBcInBvaW50ZXJcIiB9fVxuICAgICAgICAgIG9uQ2xpY2s9eygpID0+IG9uQ2hhdENsaWNrKGNoYXQuaWQpfVxuICAgICAgICA+XG4gICAgICAgICAg0KfQsNGCIHtjaGF0LmlkfVxuICAgICAgICA8L2xpPlxuICAgICAgKSl9XG4gICAgPC91bD5cbiAgKTtcbn1cbiJdLCJuYW1lcyI6WyJ1c2VRdWVyeSIsImdldENoYXRzIiwicmVzcG9uc2UiLCJmZXRjaCIsIm9rIiwiRXJyb3IiLCJqc29uIiwiQ2hhdExpc3QiLCJvbkNoYXRDbGljayIsImRhdGEiLCJlcnJvciIsImlzTG9hZGluZyIsInF1ZXJ5S2V5IiwicXVlcnlGbiIsInAiLCJtZXNzYWdlIiwiY2hhdHMiLCJjb25zb2xlIiwibG9nIiwidWwiLCJtYXAiLCJjaGF0IiwibGkiLCJzdHlsZSIsImN1cnNvciIsIm9uQ2xpY2siLCJpZCJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/organisms/ChatList.tsx\n"));

/***/ })

});